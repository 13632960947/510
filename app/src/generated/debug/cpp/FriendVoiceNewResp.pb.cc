// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FriendVoiceNewResp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "FriendVoiceNewResp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jjd {

namespace {

const ::google::protobuf::Descriptor* FriendVoiceNewResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FriendVoiceNewResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* FriendVoiceNewResp_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FriendVoiceNewResp_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FriendVoiceNewResp_ObjNews_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FriendVoiceNewResp_ObjNews_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_FriendVoiceNewResp_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_FriendVoiceNewResp_2eproto() {
  protobuf_AddDesc_FriendVoiceNewResp_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "FriendVoiceNewResp.proto");
  GOOGLE_CHECK(file != NULL);
  FriendVoiceNewResp_descriptor_ = file->message_type(0);
  static const int FriendVoiceNewResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp, result_),
  };
  FriendVoiceNewResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FriendVoiceNewResp_descriptor_,
      FriendVoiceNewResp::internal_default_instance(),
      FriendVoiceNewResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp, _has_bits_),
      -1,
      -1,
      sizeof(FriendVoiceNewResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp, _internal_metadata_));
  FriendVoiceNewResp_Result_descriptor_ = FriendVoiceNewResp_descriptor_->nested_type(0);
  static const int FriendVoiceNewResp_Result_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_Result, oldtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_Result, newtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_Result, objnews_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_Result, allcount_),
  };
  FriendVoiceNewResp_Result_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FriendVoiceNewResp_Result_descriptor_,
      FriendVoiceNewResp_Result::internal_default_instance(),
      FriendVoiceNewResp_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_Result, _has_bits_),
      -1,
      -1,
      sizeof(FriendVoiceNewResp_Result),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_Result, _internal_metadata_));
  FriendVoiceNewResp_ObjNews_descriptor_ = FriendVoiceNewResp_descriptor_->nested_type(1);
  static const int FriendVoiceNewResp_ObjNews_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, forwarduserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, forwardavatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, forwardnickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, forwardlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, releasetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, forwardcomment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, voiceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, voicename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, voicelength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, voicepic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, commentcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, forwardcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, likecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, playcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, voicedesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, voicesize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, likestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, largevoicepic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, voicepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, voicetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, livestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, livetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, nowtime_),
  };
  FriendVoiceNewResp_ObjNews_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FriendVoiceNewResp_ObjNews_descriptor_,
      FriendVoiceNewResp_ObjNews::internal_default_instance(),
      FriendVoiceNewResp_ObjNews_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, _has_bits_),
      -1,
      -1,
      sizeof(FriendVoiceNewResp_ObjNews),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendVoiceNewResp_ObjNews, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_FriendVoiceNewResp_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FriendVoiceNewResp_descriptor_, FriendVoiceNewResp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FriendVoiceNewResp_Result_descriptor_, FriendVoiceNewResp_Result::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FriendVoiceNewResp_ObjNews_descriptor_, FriendVoiceNewResp_ObjNews::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_FriendVoiceNewResp_2eproto() {
  FriendVoiceNewResp_default_instance_.Shutdown();
  delete FriendVoiceNewResp_reflection_;
  FriendVoiceNewResp_Result_default_instance_.Shutdown();
  delete FriendVoiceNewResp_Result_reflection_;
  FriendVoiceNewResp_ObjNews_default_instance_.Shutdown();
  delete FriendVoiceNewResp_ObjNews_reflection_;
}

void protobuf_InitDefaults_FriendVoiceNewResp_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  FriendVoiceNewResp_default_instance_.DefaultConstruct();
  FriendVoiceNewResp_Result_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FriendVoiceNewResp_ObjNews_default_instance_.DefaultConstruct();
  FriendVoiceNewResp_default_instance_.get_mutable()->InitAsDefaultInstance();
  FriendVoiceNewResp_Result_default_instance_.get_mutable()->InitAsDefaultInstance();
  FriendVoiceNewResp_ObjNews_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_FriendVoiceNewResp_2eproto_once_);
void protobuf_InitDefaults_FriendVoiceNewResp_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_FriendVoiceNewResp_2eproto_once_,
                 &protobuf_InitDefaults_FriendVoiceNewResp_2eproto_impl);
}
void protobuf_AddDesc_FriendVoiceNewResp_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_FriendVoiceNewResp_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030FriendVoiceNewResp.proto\022\003jjd\"\370\005\n\022Frie"
    "ndVoiceNewResp\022\r\n\005state\030\001 \002(\003\022\013\n\003msg\030\002 \002"
    "(\t\022.\n\006result\030\003 \001(\0132\036.jjd.FriendVoiceNewR"
    "esp.Result\032n\n\006Result\022\017\n\007oldTime\030\001 \002(\003\022\017\n"
    "\007newTime\030\002 \002(\003\0220\n\007objNews\030\003 \003(\0132\037.jjd.Fr"
    "iendVoiceNewResp.ObjNews\022\020\n\010allCount\030\004 \002"
    "(\003\032\245\004\n\007ObjNews\022\025\n\rforwardUserId\030\001 \001(\003\022\025\n"
    "\rforwardAvatar\030\002 \001(\t\022\027\n\017forwardNickname\030"
    "\003 \001(\t\022\024\n\014forwardLevel\030\004 \001(\003\022\023\n\013releaseTi"
    "me\030\005 \002(\003\022\026\n\016forwardComment\030\006 \001(\t\022\016\n\006user"
    "Id\030\007 \002(\003\022\020\n\010nickname\030\010 \002(\t\022\016\n\006avatar\030\t \002"
    "(\t\022\r\n\005level\030\n \002(\003\022\017\n\007voiceId\030\013 \002(\003\022\021\n\tvo"
    "iceName\030\014 \002(\t\022\023\n\013voiceLength\030\r \002(\003\022\020\n\010vo"
    "icePic\030\016 \003(\t\022\024\n\014commentCount\030\017 \002(\003\022\024\n\014fo"
    "rwardCount\030\020 \002(\003\022\021\n\tlikeCount\030\021 \002(\003\022\021\n\tp"
    "layCount\030\022 \002(\003\022\021\n\tvoiceDesc\030\023 \002(\t\022\021\n\tvoi"
    "ceSize\030\024 \002(\003\022\030\n\tlikeState\030\025 \002(\010:\005false\022\025"
    "\n\rlargeVoicePic\030\026 \003(\t\022\021\n\tvoicePath\030\027 \002(\t"
    "\022\021\n\tvoiceType\030\030 \001(\003\022\022\n\nliveStatus\030\031 \001(\003\022"
    "\020\n\010liveTime\030\032 \001(\003\022\017\n\007nowTime\030\033 \001(\003B;\n Jj"
    "d.messagePush.vo.mainpage.respB\027FriendVo"
    "iceNewRespProto", 855);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FriendVoiceNewResp.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_FriendVoiceNewResp_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_FriendVoiceNewResp_2eproto_once_);
void protobuf_AddDesc_FriendVoiceNewResp_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_FriendVoiceNewResp_2eproto_once_,
                 &protobuf_AddDesc_FriendVoiceNewResp_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_FriendVoiceNewResp_2eproto {
  StaticDescriptorInitializer_FriendVoiceNewResp_2eproto() {
    protobuf_AddDesc_FriendVoiceNewResp_2eproto();
  }
} static_descriptor_initializer_FriendVoiceNewResp_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendVoiceNewResp_Result::kOldTimeFieldNumber;
const int FriendVoiceNewResp_Result::kNewTimeFieldNumber;
const int FriendVoiceNewResp_Result::kObjNewsFieldNumber;
const int FriendVoiceNewResp_Result::kAllCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendVoiceNewResp_Result::FriendVoiceNewResp_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_FriendVoiceNewResp_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:jjd.FriendVoiceNewResp.Result)
}

void FriendVoiceNewResp_Result::InitAsDefaultInstance() {
}

FriendVoiceNewResp_Result::FriendVoiceNewResp_Result(const FriendVoiceNewResp_Result& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:jjd.FriendVoiceNewResp.Result)
}

void FriendVoiceNewResp_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&oldtime_, 0, reinterpret_cast<char*>(&allcount_) -
    reinterpret_cast<char*>(&oldtime_) + sizeof(allcount_));
}

FriendVoiceNewResp_Result::~FriendVoiceNewResp_Result() {
  // @@protoc_insertion_point(destructor:jjd.FriendVoiceNewResp.Result)
  SharedDtor();
}

void FriendVoiceNewResp_Result::SharedDtor() {
}

void FriendVoiceNewResp_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendVoiceNewResp_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendVoiceNewResp_Result_descriptor_;
}

const FriendVoiceNewResp_Result& FriendVoiceNewResp_Result::default_instance() {
  protobuf_InitDefaults_FriendVoiceNewResp_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FriendVoiceNewResp_Result> FriendVoiceNewResp_Result_default_instance_;

FriendVoiceNewResp_Result* FriendVoiceNewResp_Result::New(::google::protobuf::Arena* arena) const {
  FriendVoiceNewResp_Result* n = new FriendVoiceNewResp_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendVoiceNewResp_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:jjd.FriendVoiceNewResp.Result)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FriendVoiceNewResp_Result, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FriendVoiceNewResp_Result*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(oldtime_, allcount_);

#undef ZR_HELPER_
#undef ZR_

  objnews_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FriendVoiceNewResp_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jjd.FriendVoiceNewResp.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 oldTime = 1;
      case 1: {
        if (tag == 8) {
          set_has_oldtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &oldtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_newTime;
        break;
      }

      // required int64 newTime = 2;
      case 2: {
        if (tag == 16) {
         parse_newTime:
          set_has_newtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &newtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_objNews;
        break;
      }

      // repeated .jjd.FriendVoiceNewResp.ObjNews objNews = 3;
      case 3: {
        if (tag == 26) {
         parse_objNews:
          DO_(input->IncrementRecursionDepth());
         parse_loop_objNews:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objnews()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_objNews;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_allCount;
        break;
      }

      // required int64 allCount = 4;
      case 4: {
        if (tag == 32) {
         parse_allCount:
          set_has_allcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &allcount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jjd.FriendVoiceNewResp.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jjd.FriendVoiceNewResp.Result)
  return false;
#undef DO_
}

void FriendVoiceNewResp_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jjd.FriendVoiceNewResp.Result)
  // required int64 oldTime = 1;
  if (has_oldtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->oldtime(), output);
  }

  // required int64 newTime = 2;
  if (has_newtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->newtime(), output);
  }

  // repeated .jjd.FriendVoiceNewResp.ObjNews objNews = 3;
  for (unsigned int i = 0, n = this->objnews_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->objnews(i), output);
  }

  // required int64 allCount = 4;
  if (has_allcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->allcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jjd.FriendVoiceNewResp.Result)
}

::google::protobuf::uint8* FriendVoiceNewResp_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jjd.FriendVoiceNewResp.Result)
  // required int64 oldTime = 1;
  if (has_oldtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->oldtime(), target);
  }

  // required int64 newTime = 2;
  if (has_newtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->newtime(), target);
  }

  // repeated .jjd.FriendVoiceNewResp.ObjNews objNews = 3;
  for (unsigned int i = 0, n = this->objnews_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->objnews(i), false, target);
  }

  // required int64 allCount = 4;
  if (has_allcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->allcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jjd.FriendVoiceNewResp.Result)
  return target;
}

size_t FriendVoiceNewResp_Result::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:jjd.FriendVoiceNewResp.Result)
  size_t total_size = 0;

  if (has_oldtime()) {
    // required int64 oldTime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oldtime());
  }

  if (has_newtime()) {
    // required int64 newTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->newtime());
  }

  if (has_allcount()) {
    // required int64 allCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->allcount());
  }

  return total_size;
}
size_t FriendVoiceNewResp_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jjd.FriendVoiceNewResp.Result)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required int64 oldTime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oldtime());

    // required int64 newTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->newtime());

    // required int64 allCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->allcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .jjd.FriendVoiceNewResp.ObjNews objNews = 3;
  {
    unsigned int count = this->objnews_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objnews(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendVoiceNewResp_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jjd.FriendVoiceNewResp.Result)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FriendVoiceNewResp_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendVoiceNewResp_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jjd.FriendVoiceNewResp.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jjd.FriendVoiceNewResp.Result)
    UnsafeMergeFrom(*source);
  }
}

void FriendVoiceNewResp_Result::MergeFrom(const FriendVoiceNewResp_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jjd.FriendVoiceNewResp.Result)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FriendVoiceNewResp_Result::UnsafeMergeFrom(const FriendVoiceNewResp_Result& from) {
  GOOGLE_DCHECK(&from != this);
  objnews_.MergeFrom(from.objnews_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_oldtime()) {
      set_oldtime(from.oldtime());
    }
    if (from.has_newtime()) {
      set_newtime(from.newtime());
    }
    if (from.has_allcount()) {
      set_allcount(from.allcount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FriendVoiceNewResp_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jjd.FriendVoiceNewResp.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendVoiceNewResp_Result::CopyFrom(const FriendVoiceNewResp_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jjd.FriendVoiceNewResp.Result)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FriendVoiceNewResp_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->objnews())) return false;
  return true;
}

void FriendVoiceNewResp_Result::Swap(FriendVoiceNewResp_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendVoiceNewResp_Result::InternalSwap(FriendVoiceNewResp_Result* other) {
  std::swap(oldtime_, other->oldtime_);
  std::swap(newtime_, other->newtime_);
  objnews_.UnsafeArenaSwap(&other->objnews_);
  std::swap(allcount_, other->allcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendVoiceNewResp_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FriendVoiceNewResp_Result_descriptor_;
  metadata.reflection = FriendVoiceNewResp_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendVoiceNewResp_ObjNews::kForwardUserIdFieldNumber;
const int FriendVoiceNewResp_ObjNews::kForwardAvatarFieldNumber;
const int FriendVoiceNewResp_ObjNews::kForwardNicknameFieldNumber;
const int FriendVoiceNewResp_ObjNews::kForwardLevelFieldNumber;
const int FriendVoiceNewResp_ObjNews::kReleaseTimeFieldNumber;
const int FriendVoiceNewResp_ObjNews::kForwardCommentFieldNumber;
const int FriendVoiceNewResp_ObjNews::kUserIdFieldNumber;
const int FriendVoiceNewResp_ObjNews::kNicknameFieldNumber;
const int FriendVoiceNewResp_ObjNews::kAvatarFieldNumber;
const int FriendVoiceNewResp_ObjNews::kLevelFieldNumber;
const int FriendVoiceNewResp_ObjNews::kVoiceIdFieldNumber;
const int FriendVoiceNewResp_ObjNews::kVoiceNameFieldNumber;
const int FriendVoiceNewResp_ObjNews::kVoiceLengthFieldNumber;
const int FriendVoiceNewResp_ObjNews::kVoicePicFieldNumber;
const int FriendVoiceNewResp_ObjNews::kCommentCountFieldNumber;
const int FriendVoiceNewResp_ObjNews::kForwardCountFieldNumber;
const int FriendVoiceNewResp_ObjNews::kLikeCountFieldNumber;
const int FriendVoiceNewResp_ObjNews::kPlayCountFieldNumber;
const int FriendVoiceNewResp_ObjNews::kVoiceDescFieldNumber;
const int FriendVoiceNewResp_ObjNews::kVoiceSizeFieldNumber;
const int FriendVoiceNewResp_ObjNews::kLikeStateFieldNumber;
const int FriendVoiceNewResp_ObjNews::kLargeVoicePicFieldNumber;
const int FriendVoiceNewResp_ObjNews::kVoicePathFieldNumber;
const int FriendVoiceNewResp_ObjNews::kVoiceTypeFieldNumber;
const int FriendVoiceNewResp_ObjNews::kLiveStatusFieldNumber;
const int FriendVoiceNewResp_ObjNews::kLiveTimeFieldNumber;
const int FriendVoiceNewResp_ObjNews::kNowTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendVoiceNewResp_ObjNews::FriendVoiceNewResp_ObjNews()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_FriendVoiceNewResp_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:jjd.FriendVoiceNewResp.ObjNews)
}

void FriendVoiceNewResp_ObjNews::InitAsDefaultInstance() {
}

FriendVoiceNewResp_ObjNews::FriendVoiceNewResp_ObjNews(const FriendVoiceNewResp_ObjNews& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:jjd.FriendVoiceNewResp.ObjNews)
}

void FriendVoiceNewResp_ObjNews::SharedCtor() {
  _cached_size_ = 0;
  forwardavatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forwardnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forwardcomment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voicedesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voicepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&forwarduserid_, 0, reinterpret_cast<char*>(&likestate_) -
    reinterpret_cast<char*>(&forwarduserid_) + sizeof(likestate_));
}

FriendVoiceNewResp_ObjNews::~FriendVoiceNewResp_ObjNews() {
  // @@protoc_insertion_point(destructor:jjd.FriendVoiceNewResp.ObjNews)
  SharedDtor();
}

void FriendVoiceNewResp_ObjNews::SharedDtor() {
  forwardavatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forwardnickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forwardcomment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voicedesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voicepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendVoiceNewResp_ObjNews::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendVoiceNewResp_ObjNews::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendVoiceNewResp_ObjNews_descriptor_;
}

const FriendVoiceNewResp_ObjNews& FriendVoiceNewResp_ObjNews::default_instance() {
  protobuf_InitDefaults_FriendVoiceNewResp_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FriendVoiceNewResp_ObjNews> FriendVoiceNewResp_ObjNews_default_instance_;

FriendVoiceNewResp_ObjNews* FriendVoiceNewResp_ObjNews::New(::google::protobuf::Arena* arena) const {
  FriendVoiceNewResp_ObjNews* n = new FriendVoiceNewResp_ObjNews;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendVoiceNewResp_ObjNews::Clear() {
// @@protoc_insertion_point(message_clear_start:jjd.FriendVoiceNewResp.ObjNews)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FriendVoiceNewResp_ObjNews, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FriendVoiceNewResp_ObjNews*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(forwarduserid_, userid_);
    if (has_forwardavatar()) {
      forwardavatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_forwardnickname()) {
      forwardnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_forwardcomment()) {
      forwardcomment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_nickname()) {
      nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 57088u) {
    ZR_(level_, forwardcount_);
    if (has_avatar()) {
      avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_voicename()) {
      voicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[16 / 32] & 14614528u) {
    ZR_(likecount_, voicetype_);
    if (has_voicedesc()) {
      voicedesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    likestate_ = false;
    if (has_voicepath()) {
      voicepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ZR_(livestatus_, nowtime_);

#undef ZR_HELPER_
#undef ZR_

  voicepic_.Clear();
  largevoicepic_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FriendVoiceNewResp_ObjNews::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jjd.FriendVoiceNewResp.ObjNews)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 forwardUserId = 1;
      case 1: {
        if (tag == 8) {
          set_has_forwarduserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &forwarduserid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_forwardAvatar;
        break;
      }

      // optional string forwardAvatar = 2;
      case 2: {
        if (tag == 18) {
         parse_forwardAvatar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_forwardavatar()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->forwardavatar().data(), this->forwardavatar().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.forwardAvatar");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_forwardNickname;
        break;
      }

      // optional string forwardNickname = 3;
      case 3: {
        if (tag == 26) {
         parse_forwardNickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_forwardnickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->forwardnickname().data(), this->forwardnickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.forwardNickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_forwardLevel;
        break;
      }

      // optional int64 forwardLevel = 4;
      case 4: {
        if (tag == 32) {
         parse_forwardLevel:
          set_has_forwardlevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &forwardlevel_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_releaseTime;
        break;
      }

      // required int64 releaseTime = 5;
      case 5: {
        if (tag == 40) {
         parse_releaseTime:
          set_has_releasetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &releasetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_forwardComment;
        break;
      }

      // optional string forwardComment = 6;
      case 6: {
        if (tag == 50) {
         parse_forwardComment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_forwardcomment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->forwardcomment().data(), this->forwardcomment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.forwardComment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_userId;
        break;
      }

      // required int64 userId = 7;
      case 7: {
        if (tag == 56) {
         parse_userId:
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_nickname;
        break;
      }

      // required string nickname = 8;
      case 8: {
        if (tag == 66) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_avatar;
        break;
      }

      // required string avatar = 9;
      case 9: {
        if (tag == 74) {
         parse_avatar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->avatar().data(), this->avatar().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.avatar");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_level;
        break;
      }

      // required int64 level = 10;
      case 10: {
        if (tag == 80) {
         parse_level:
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_voiceId;
        break;
      }

      // required int64 voiceId = 11;
      case 11: {
        if (tag == 88) {
         parse_voiceId:
          set_has_voiceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &voiceid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_voiceName;
        break;
      }

      // required string voiceName = 12;
      case 12: {
        if (tag == 98) {
         parse_voiceName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voicename().data(), this->voicename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.voiceName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_voiceLength;
        break;
      }

      // required int64 voiceLength = 13;
      case 13: {
        if (tag == 104) {
         parse_voiceLength:
          set_has_voicelength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &voicelength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_voicePic;
        break;
      }

      // repeated string voicePic = 14;
      case 14: {
        if (tag == 114) {
         parse_voicePic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_voicepic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voicepic(this->voicepic_size() - 1).data(),
            this->voicepic(this->voicepic_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.voicePic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_voicePic;
        if (input->ExpectTag(120)) goto parse_commentCount;
        break;
      }

      // required int64 commentCount = 15;
      case 15: {
        if (tag == 120) {
         parse_commentCount:
          set_has_commentcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &commentcount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_forwardCount;
        break;
      }

      // required int64 forwardCount = 16;
      case 16: {
        if (tag == 128) {
         parse_forwardCount:
          set_has_forwardcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &forwardcount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_likeCount;
        break;
      }

      // required int64 likeCount = 17;
      case 17: {
        if (tag == 136) {
         parse_likeCount:
          set_has_likecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &likecount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_playCount;
        break;
      }

      // required int64 playCount = 18;
      case 18: {
        if (tag == 144) {
         parse_playCount:
          set_has_playcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playcount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_voiceDesc;
        break;
      }

      // required string voiceDesc = 19;
      case 19: {
        if (tag == 154) {
         parse_voiceDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voicedesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voicedesc().data(), this->voicedesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.voiceDesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_voiceSize;
        break;
      }

      // required int64 voiceSize = 20;
      case 20: {
        if (tag == 160) {
         parse_voiceSize:
          set_has_voicesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &voicesize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_likeState;
        break;
      }

      // required bool likeState = 21 [default = false];
      case 21: {
        if (tag == 168) {
         parse_likeState:
          set_has_likestate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &likestate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_largeVoicePic;
        break;
      }

      // repeated string largeVoicePic = 22;
      case 22: {
        if (tag == 178) {
         parse_largeVoicePic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_largevoicepic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->largevoicepic(this->largevoicepic_size() - 1).data(),
            this->largevoicepic(this->largevoicepic_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.largeVoicePic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_largeVoicePic;
        if (input->ExpectTag(186)) goto parse_voicePath;
        break;
      }

      // required string voicePath = 23;
      case 23: {
        if (tag == 186) {
         parse_voicePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voicepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voicepath().data(), this->voicepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.ObjNews.voicePath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_voiceType;
        break;
      }

      // optional int64 voiceType = 24;
      case 24: {
        if (tag == 192) {
         parse_voiceType:
          set_has_voicetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &voicetype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_liveStatus;
        break;
      }

      // optional int64 liveStatus = 25;
      case 25: {
        if (tag == 200) {
         parse_liveStatus:
          set_has_livestatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &livestatus_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_liveTime;
        break;
      }

      // optional int64 liveTime = 26;
      case 26: {
        if (tag == 208) {
         parse_liveTime:
          set_has_livetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &livetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_nowTime;
        break;
      }

      // optional int64 nowTime = 27;
      case 27: {
        if (tag == 216) {
         parse_nowTime:
          set_has_nowtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nowtime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jjd.FriendVoiceNewResp.ObjNews)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jjd.FriendVoiceNewResp.ObjNews)
  return false;
#undef DO_
}

void FriendVoiceNewResp_ObjNews::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jjd.FriendVoiceNewResp.ObjNews)
  // optional int64 forwardUserId = 1;
  if (has_forwarduserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->forwarduserid(), output);
  }

  // optional string forwardAvatar = 2;
  if (has_forwardavatar()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->forwardavatar().data(), this->forwardavatar().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.forwardAvatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->forwardavatar(), output);
  }

  // optional string forwardNickname = 3;
  if (has_forwardnickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->forwardnickname().data(), this->forwardnickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.forwardNickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->forwardnickname(), output);
  }

  // optional int64 forwardLevel = 4;
  if (has_forwardlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->forwardlevel(), output);
  }

  // required int64 releaseTime = 5;
  if (has_releasetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->releasetime(), output);
  }

  // optional string forwardComment = 6;
  if (has_forwardcomment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->forwardcomment().data(), this->forwardcomment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.forwardComment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->forwardcomment(), output);
  }

  // required int64 userId = 7;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->userid(), output);
  }

  // required string nickname = 8;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nickname(), output);
  }

  // required string avatar = 9;
  if (has_avatar()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->avatar().data(), this->avatar().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->avatar(), output);
  }

  // required int64 level = 10;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->level(), output);
  }

  // required int64 voiceId = 11;
  if (has_voiceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->voiceid(), output);
  }

  // required string voiceName = 12;
  if (has_voicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voicename().data(), this->voicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.voiceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->voicename(), output);
  }

  // required int64 voiceLength = 13;
  if (has_voicelength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->voicelength(), output);
  }

  // repeated string voicePic = 14;
  for (int i = 0; i < this->voicepic_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voicepic(i).data(), this->voicepic(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.voicePic");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->voicepic(i), output);
  }

  // required int64 commentCount = 15;
  if (has_commentcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->commentcount(), output);
  }

  // required int64 forwardCount = 16;
  if (has_forwardcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->forwardcount(), output);
  }

  // required int64 likeCount = 17;
  if (has_likecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->likecount(), output);
  }

  // required int64 playCount = 18;
  if (has_playcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->playcount(), output);
  }

  // required string voiceDesc = 19;
  if (has_voicedesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voicedesc().data(), this->voicedesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.voiceDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->voicedesc(), output);
  }

  // required int64 voiceSize = 20;
  if (has_voicesize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->voicesize(), output);
  }

  // required bool likeState = 21 [default = false];
  if (has_likestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->likestate(), output);
  }

  // repeated string largeVoicePic = 22;
  for (int i = 0; i < this->largevoicepic_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->largevoicepic(i).data(), this->largevoicepic(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.largeVoicePic");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->largevoicepic(i), output);
  }

  // required string voicePath = 23;
  if (has_voicepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voicepath().data(), this->voicepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.voicePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->voicepath(), output);
  }

  // optional int64 voiceType = 24;
  if (has_voicetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->voicetype(), output);
  }

  // optional int64 liveStatus = 25;
  if (has_livestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->livestatus(), output);
  }

  // optional int64 liveTime = 26;
  if (has_livetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->livetime(), output);
  }

  // optional int64 nowTime = 27;
  if (has_nowtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(27, this->nowtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jjd.FriendVoiceNewResp.ObjNews)
}

::google::protobuf::uint8* FriendVoiceNewResp_ObjNews::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jjd.FriendVoiceNewResp.ObjNews)
  // optional int64 forwardUserId = 1;
  if (has_forwarduserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->forwarduserid(), target);
  }

  // optional string forwardAvatar = 2;
  if (has_forwardavatar()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->forwardavatar().data(), this->forwardavatar().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.forwardAvatar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->forwardavatar(), target);
  }

  // optional string forwardNickname = 3;
  if (has_forwardnickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->forwardnickname().data(), this->forwardnickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.forwardNickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->forwardnickname(), target);
  }

  // optional int64 forwardLevel = 4;
  if (has_forwardlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->forwardlevel(), target);
  }

  // required int64 releaseTime = 5;
  if (has_releasetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->releasetime(), target);
  }

  // optional string forwardComment = 6;
  if (has_forwardcomment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->forwardcomment().data(), this->forwardcomment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.forwardComment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->forwardcomment(), target);
  }

  // required int64 userId = 7;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->userid(), target);
  }

  // required string nickname = 8;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nickname(), target);
  }

  // required string avatar = 9;
  if (has_avatar()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->avatar().data(), this->avatar().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.avatar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->avatar(), target);
  }

  // required int64 level = 10;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->level(), target);
  }

  // required int64 voiceId = 11;
  if (has_voiceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->voiceid(), target);
  }

  // required string voiceName = 12;
  if (has_voicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voicename().data(), this->voicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.voiceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->voicename(), target);
  }

  // required int64 voiceLength = 13;
  if (has_voicelength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->voicelength(), target);
  }

  // repeated string voicePic = 14;
  for (int i = 0; i < this->voicepic_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voicepic(i).data(), this->voicepic(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.voicePic");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->voicepic(i), target);
  }

  // required int64 commentCount = 15;
  if (has_commentcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->commentcount(), target);
  }

  // required int64 forwardCount = 16;
  if (has_forwardcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->forwardcount(), target);
  }

  // required int64 likeCount = 17;
  if (has_likecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->likecount(), target);
  }

  // required int64 playCount = 18;
  if (has_playcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->playcount(), target);
  }

  // required string voiceDesc = 19;
  if (has_voicedesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voicedesc().data(), this->voicedesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.voiceDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->voicedesc(), target);
  }

  // required int64 voiceSize = 20;
  if (has_voicesize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->voicesize(), target);
  }

  // required bool likeState = 21 [default = false];
  if (has_likestate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->likestate(), target);
  }

  // repeated string largeVoicePic = 22;
  for (int i = 0; i < this->largevoicepic_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->largevoicepic(i).data(), this->largevoicepic(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.largeVoicePic");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(22, this->largevoicepic(i), target);
  }

  // required string voicePath = 23;
  if (has_voicepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voicepath().data(), this->voicepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.ObjNews.voicePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->voicepath(), target);
  }

  // optional int64 voiceType = 24;
  if (has_voicetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->voicetype(), target);
  }

  // optional int64 liveStatus = 25;
  if (has_livestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->livestatus(), target);
  }

  // optional int64 liveTime = 26;
  if (has_livetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->livetime(), target);
  }

  // optional int64 nowTime = 27;
  if (has_nowtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(27, this->nowtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jjd.FriendVoiceNewResp.ObjNews)
  return target;
}

size_t FriendVoiceNewResp_ObjNews::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:jjd.FriendVoiceNewResp.ObjNews)
  size_t total_size = 0;

  if (has_releasetime()) {
    // required int64 releaseTime = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->releasetime());
  }

  if (has_userid()) {
    // required int64 userId = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  if (has_nickname()) {
    // required string nickname = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_avatar()) {
    // required string avatar = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar());
  }

  if (has_level()) {
    // required int64 level = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->level());
  }

  if (has_voiceid()) {
    // required int64 voiceId = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->voiceid());
  }

  if (has_voicename()) {
    // required string voiceName = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voicename());
  }

  if (has_voicelength()) {
    // required int64 voiceLength = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->voicelength());
  }

  if (has_commentcount()) {
    // required int64 commentCount = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->commentcount());
  }

  if (has_forwardcount()) {
    // required int64 forwardCount = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->forwardcount());
  }

  if (has_likecount()) {
    // required int64 likeCount = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->likecount());
  }

  if (has_playcount()) {
    // required int64 playCount = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->playcount());
  }

  if (has_voicedesc()) {
    // required string voiceDesc = 19;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voicedesc());
  }

  if (has_voicesize()) {
    // required int64 voiceSize = 20;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->voicesize());
  }

  if (has_likestate()) {
    // required bool likeState = 21 [default = false];
    total_size += 2 + 1;
  }

  if (has_voicepath()) {
    // required string voicePath = 23;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voicepath());
  }

  return total_size;
}
size_t FriendVoiceNewResp_ObjNews::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jjd.FriendVoiceNewResp.ObjNews)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x005fdfd0) ^ 0x005fdfd0) == 0) {  // All required fields are present.
    // required int64 releaseTime = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->releasetime());

    // required int64 userId = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());

    // required string nickname = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required string avatar = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar());

    // required int64 level = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->level());

    // required int64 voiceId = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->voiceid());

    // required string voiceName = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voicename());

    // required int64 voiceLength = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->voicelength());

    // required int64 commentCount = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->commentcount());

    // required int64 forwardCount = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->forwardcount());

    // required int64 likeCount = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->likecount());

    // required int64 playCount = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->playcount());

    // required string voiceDesc = 19;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voicedesc());

    // required int64 voiceSize = 20;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->voicesize());

    // required bool likeState = 21 [default = false];
    total_size += 2 + 1;

    // required string voicePath = 23;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voicepath());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 47u) {
    // optional int64 forwardUserId = 1;
    if (has_forwarduserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->forwarduserid());
    }

    // optional string forwardAvatar = 2;
    if (has_forwardavatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->forwardavatar());
    }

    // optional string forwardNickname = 3;
    if (has_forwardnickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->forwardnickname());
    }

    // optional int64 forwardLevel = 4;
    if (has_forwardlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->forwardlevel());
    }

    // optional string forwardComment = 6;
    if (has_forwardcomment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->forwardcomment());
    }

  }
  // optional int64 voiceType = 24;
  if (has_voicetype()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->voicetype());
  }

  if (_has_bits_[24 / 32] & 117440512u) {
    // optional int64 liveStatus = 25;
    if (has_livestatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->livestatus());
    }

    // optional int64 liveTime = 26;
    if (has_livetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->livetime());
    }

    // optional int64 nowTime = 27;
    if (has_nowtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->nowtime());
    }

  }
  // repeated string voicePic = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->voicepic_size());
  for (int i = 0; i < this->voicepic_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->voicepic(i));
  }

  // repeated string largeVoicePic = 22;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->largevoicepic_size());
  for (int i = 0; i < this->largevoicepic_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->largevoicepic(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendVoiceNewResp_ObjNews::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jjd.FriendVoiceNewResp.ObjNews)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FriendVoiceNewResp_ObjNews* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendVoiceNewResp_ObjNews>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jjd.FriendVoiceNewResp.ObjNews)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jjd.FriendVoiceNewResp.ObjNews)
    UnsafeMergeFrom(*source);
  }
}

void FriendVoiceNewResp_ObjNews::MergeFrom(const FriendVoiceNewResp_ObjNews& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jjd.FriendVoiceNewResp.ObjNews)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FriendVoiceNewResp_ObjNews::UnsafeMergeFrom(const FriendVoiceNewResp_ObjNews& from) {
  GOOGLE_DCHECK(&from != this);
  voicepic_.UnsafeMergeFrom(from.voicepic_);
  largevoicepic_.UnsafeMergeFrom(from.largevoicepic_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_forwarduserid()) {
      set_forwarduserid(from.forwarduserid());
    }
    if (from.has_forwardavatar()) {
      set_has_forwardavatar();
      forwardavatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forwardavatar_);
    }
    if (from.has_forwardnickname()) {
      set_has_forwardnickname();
      forwardnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forwardnickname_);
    }
    if (from.has_forwardlevel()) {
      set_forwardlevel(from.forwardlevel());
    }
    if (from.has_releasetime()) {
      set_releasetime(from.releasetime());
    }
    if (from.has_forwardcomment()) {
      set_has_forwardcomment();
      forwardcomment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forwardcomment_);
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_avatar()) {
      set_has_avatar();
      avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_voiceid()) {
      set_voiceid(from.voiceid());
    }
    if (from.has_voicename()) {
      set_has_voicename();
      voicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voicename_);
    }
    if (from.has_voicelength()) {
      set_voicelength(from.voicelength());
    }
    if (from.has_commentcount()) {
      set_commentcount(from.commentcount());
    }
    if (from.has_forwardcount()) {
      set_forwardcount(from.forwardcount());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_likecount()) {
      set_likecount(from.likecount());
    }
    if (from.has_playcount()) {
      set_playcount(from.playcount());
    }
    if (from.has_voicedesc()) {
      set_has_voicedesc();
      voicedesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voicedesc_);
    }
    if (from.has_voicesize()) {
      set_voicesize(from.voicesize());
    }
    if (from.has_likestate()) {
      set_likestate(from.likestate());
    }
    if (from.has_voicepath()) {
      set_has_voicepath();
      voicepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voicepath_);
    }
    if (from.has_voicetype()) {
      set_voicetype(from.voicetype());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_livestatus()) {
      set_livestatus(from.livestatus());
    }
    if (from.has_livetime()) {
      set_livetime(from.livetime());
    }
    if (from.has_nowtime()) {
      set_nowtime(from.nowtime());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FriendVoiceNewResp_ObjNews::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jjd.FriendVoiceNewResp.ObjNews)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendVoiceNewResp_ObjNews::CopyFrom(const FriendVoiceNewResp_ObjNews& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jjd.FriendVoiceNewResp.ObjNews)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FriendVoiceNewResp_ObjNews::IsInitialized() const {
  if ((_has_bits_[0] & 0x005fdfd0) != 0x005fdfd0) return false;

  return true;
}

void FriendVoiceNewResp_ObjNews::Swap(FriendVoiceNewResp_ObjNews* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendVoiceNewResp_ObjNews::InternalSwap(FriendVoiceNewResp_ObjNews* other) {
  std::swap(forwarduserid_, other->forwarduserid_);
  forwardavatar_.Swap(&other->forwardavatar_);
  forwardnickname_.Swap(&other->forwardnickname_);
  std::swap(forwardlevel_, other->forwardlevel_);
  std::swap(releasetime_, other->releasetime_);
  forwardcomment_.Swap(&other->forwardcomment_);
  std::swap(userid_, other->userid_);
  nickname_.Swap(&other->nickname_);
  avatar_.Swap(&other->avatar_);
  std::swap(level_, other->level_);
  std::swap(voiceid_, other->voiceid_);
  voicename_.Swap(&other->voicename_);
  std::swap(voicelength_, other->voicelength_);
  voicepic_.UnsafeArenaSwap(&other->voicepic_);
  std::swap(commentcount_, other->commentcount_);
  std::swap(forwardcount_, other->forwardcount_);
  std::swap(likecount_, other->likecount_);
  std::swap(playcount_, other->playcount_);
  voicedesc_.Swap(&other->voicedesc_);
  std::swap(voicesize_, other->voicesize_);
  std::swap(likestate_, other->likestate_);
  largevoicepic_.UnsafeArenaSwap(&other->largevoicepic_);
  voicepath_.Swap(&other->voicepath_);
  std::swap(voicetype_, other->voicetype_);
  std::swap(livestatus_, other->livestatus_);
  std::swap(livetime_, other->livetime_);
  std::swap(nowtime_, other->nowtime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendVoiceNewResp_ObjNews::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FriendVoiceNewResp_ObjNews_descriptor_;
  metadata.reflection = FriendVoiceNewResp_ObjNews_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendVoiceNewResp::kStateFieldNumber;
const int FriendVoiceNewResp::kMsgFieldNumber;
const int FriendVoiceNewResp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendVoiceNewResp::FriendVoiceNewResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_FriendVoiceNewResp_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:jjd.FriendVoiceNewResp)
}

void FriendVoiceNewResp::InitAsDefaultInstance() {
  result_ = const_cast< ::jjd::FriendVoiceNewResp_Result*>(
      ::jjd::FriendVoiceNewResp_Result::internal_default_instance());
}

FriendVoiceNewResp::FriendVoiceNewResp(const FriendVoiceNewResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:jjd.FriendVoiceNewResp)
}

void FriendVoiceNewResp::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = NULL;
  state_ = GOOGLE_LONGLONG(0);
}

FriendVoiceNewResp::~FriendVoiceNewResp() {
  // @@protoc_insertion_point(destructor:jjd.FriendVoiceNewResp)
  SharedDtor();
}

void FriendVoiceNewResp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &FriendVoiceNewResp_default_instance_.get()) {
    delete result_;
  }
}

void FriendVoiceNewResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendVoiceNewResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FriendVoiceNewResp_descriptor_;
}

const FriendVoiceNewResp& FriendVoiceNewResp::default_instance() {
  protobuf_InitDefaults_FriendVoiceNewResp_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FriendVoiceNewResp> FriendVoiceNewResp_default_instance_;

FriendVoiceNewResp* FriendVoiceNewResp::New(::google::protobuf::Arena* arena) const {
  FriendVoiceNewResp* n = new FriendVoiceNewResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendVoiceNewResp::Clear() {
// @@protoc_insertion_point(message_clear_start:jjd.FriendVoiceNewResp)
  if (_has_bits_[0 / 32] & 7u) {
    state_ = GOOGLE_LONGLONG(0);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_result()) {
      if (result_ != NULL) result_->::jjd::FriendVoiceNewResp_Result::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FriendVoiceNewResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jjd.FriendVoiceNewResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 state = 1;
      case 1: {
        if (tag == 8) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jjd.FriendVoiceNewResp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_result;
        break;
      }

      // optional .jjd.FriendVoiceNewResp.Result result = 3;
      case 3: {
        if (tag == 26) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jjd.FriendVoiceNewResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jjd.FriendVoiceNewResp)
  return false;
#undef DO_
}

void FriendVoiceNewResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jjd.FriendVoiceNewResp)
  // required int64 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->state(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .jjd.FriendVoiceNewResp.Result result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->result_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jjd.FriendVoiceNewResp)
}

::google::protobuf::uint8* FriendVoiceNewResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jjd.FriendVoiceNewResp)
  // required int64 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->state(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jjd.FriendVoiceNewResp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .jjd.FriendVoiceNewResp.Result result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->result_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jjd.FriendVoiceNewResp)
  return target;
}

size_t FriendVoiceNewResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:jjd.FriendVoiceNewResp)
  size_t total_size = 0;

  if (has_state()) {
    // required int64 state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->state());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
size_t FriendVoiceNewResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jjd.FriendVoiceNewResp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->state());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .jjd.FriendVoiceNewResp.Result result = 3;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendVoiceNewResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jjd.FriendVoiceNewResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FriendVoiceNewResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendVoiceNewResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jjd.FriendVoiceNewResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jjd.FriendVoiceNewResp)
    UnsafeMergeFrom(*source);
  }
}

void FriendVoiceNewResp::MergeFrom(const FriendVoiceNewResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jjd.FriendVoiceNewResp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FriendVoiceNewResp::UnsafeMergeFrom(const FriendVoiceNewResp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_result()) {
      mutable_result()->::jjd::FriendVoiceNewResp_Result::MergeFrom(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FriendVoiceNewResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jjd.FriendVoiceNewResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendVoiceNewResp::CopyFrom(const FriendVoiceNewResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jjd.FriendVoiceNewResp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FriendVoiceNewResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_result()) {
    if (!this->result_->IsInitialized()) return false;
  }
  return true;
}

void FriendVoiceNewResp::Swap(FriendVoiceNewResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendVoiceNewResp::InternalSwap(FriendVoiceNewResp* other) {
  std::swap(state_, other->state_);
  msg_.Swap(&other->msg_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendVoiceNewResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FriendVoiceNewResp_descriptor_;
  metadata.reflection = FriendVoiceNewResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FriendVoiceNewResp_Result

// required int64 oldTime = 1;
bool FriendVoiceNewResp_Result::has_oldtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FriendVoiceNewResp_Result::set_has_oldtime() {
  _has_bits_[0] |= 0x00000001u;
}
void FriendVoiceNewResp_Result::clear_has_oldtime() {
  _has_bits_[0] &= ~0x00000001u;
}
void FriendVoiceNewResp_Result::clear_oldtime() {
  oldtime_ = GOOGLE_LONGLONG(0);
  clear_has_oldtime();
}
::google::protobuf::int64 FriendVoiceNewResp_Result::oldtime() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.Result.oldTime)
  return oldtime_;
}
void FriendVoiceNewResp_Result::set_oldtime(::google::protobuf::int64 value) {
  set_has_oldtime();
  oldtime_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.Result.oldTime)
}

// required int64 newTime = 2;
bool FriendVoiceNewResp_Result::has_newtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FriendVoiceNewResp_Result::set_has_newtime() {
  _has_bits_[0] |= 0x00000002u;
}
void FriendVoiceNewResp_Result::clear_has_newtime() {
  _has_bits_[0] &= ~0x00000002u;
}
void FriendVoiceNewResp_Result::clear_newtime() {
  newtime_ = GOOGLE_LONGLONG(0);
  clear_has_newtime();
}
::google::protobuf::int64 FriendVoiceNewResp_Result::newtime() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.Result.newTime)
  return newtime_;
}
void FriendVoiceNewResp_Result::set_newtime(::google::protobuf::int64 value) {
  set_has_newtime();
  newtime_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.Result.newTime)
}

// repeated .jjd.FriendVoiceNewResp.ObjNews objNews = 3;
int FriendVoiceNewResp_Result::objnews_size() const {
  return objnews_.size();
}
void FriendVoiceNewResp_Result::clear_objnews() {
  objnews_.Clear();
}
const ::jjd::FriendVoiceNewResp_ObjNews& FriendVoiceNewResp_Result::objnews(int index) const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.Result.objNews)
  return objnews_.Get(index);
}
::jjd::FriendVoiceNewResp_ObjNews* FriendVoiceNewResp_Result::mutable_objnews(int index) {
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.Result.objNews)
  return objnews_.Mutable(index);
}
::jjd::FriendVoiceNewResp_ObjNews* FriendVoiceNewResp_Result::add_objnews() {
  // @@protoc_insertion_point(field_add:jjd.FriendVoiceNewResp.Result.objNews)
  return objnews_.Add();
}
::google::protobuf::RepeatedPtrField< ::jjd::FriendVoiceNewResp_ObjNews >*
FriendVoiceNewResp_Result::mutable_objnews() {
  // @@protoc_insertion_point(field_mutable_list:jjd.FriendVoiceNewResp.Result.objNews)
  return &objnews_;
}
const ::google::protobuf::RepeatedPtrField< ::jjd::FriendVoiceNewResp_ObjNews >&
FriendVoiceNewResp_Result::objnews() const {
  // @@protoc_insertion_point(field_list:jjd.FriendVoiceNewResp.Result.objNews)
  return objnews_;
}

// required int64 allCount = 4;
bool FriendVoiceNewResp_Result::has_allcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FriendVoiceNewResp_Result::set_has_allcount() {
  _has_bits_[0] |= 0x00000008u;
}
void FriendVoiceNewResp_Result::clear_has_allcount() {
  _has_bits_[0] &= ~0x00000008u;
}
void FriendVoiceNewResp_Result::clear_allcount() {
  allcount_ = GOOGLE_LONGLONG(0);
  clear_has_allcount();
}
::google::protobuf::int64 FriendVoiceNewResp_Result::allcount() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.Result.allCount)
  return allcount_;
}
void FriendVoiceNewResp_Result::set_allcount(::google::protobuf::int64 value) {
  set_has_allcount();
  allcount_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.Result.allCount)
}

inline const FriendVoiceNewResp_Result* FriendVoiceNewResp_Result::internal_default_instance() {
  return &FriendVoiceNewResp_Result_default_instance_.get();
}
// -------------------------------------------------------------------

// FriendVoiceNewResp_ObjNews

// optional int64 forwardUserId = 1;
bool FriendVoiceNewResp_ObjNews::has_forwarduserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_forwarduserid() {
  _has_bits_[0] |= 0x00000001u;
}
void FriendVoiceNewResp_ObjNews::clear_has_forwarduserid() {
  _has_bits_[0] &= ~0x00000001u;
}
void FriendVoiceNewResp_ObjNews::clear_forwarduserid() {
  forwarduserid_ = GOOGLE_LONGLONG(0);
  clear_has_forwarduserid();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::forwarduserid() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.forwardUserId)
  return forwarduserid_;
}
void FriendVoiceNewResp_ObjNews::set_forwarduserid(::google::protobuf::int64 value) {
  set_has_forwarduserid();
  forwarduserid_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.forwardUserId)
}

// optional string forwardAvatar = 2;
bool FriendVoiceNewResp_ObjNews::has_forwardavatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_forwardavatar() {
  _has_bits_[0] |= 0x00000002u;
}
void FriendVoiceNewResp_ObjNews::clear_has_forwardavatar() {
  _has_bits_[0] &= ~0x00000002u;
}
void FriendVoiceNewResp_ObjNews::clear_forwardavatar() {
  forwardavatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_forwardavatar();
}
const ::std::string& FriendVoiceNewResp_ObjNews::forwardavatar() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.forwardAvatar)
  return forwardavatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_forwardavatar(const ::std::string& value) {
  set_has_forwardavatar();
  forwardavatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.forwardAvatar)
}
void FriendVoiceNewResp_ObjNews::set_forwardavatar(const char* value) {
  set_has_forwardavatar();
  forwardavatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.forwardAvatar)
}
void FriendVoiceNewResp_ObjNews::set_forwardavatar(const char* value, size_t size) {
  set_has_forwardavatar();
  forwardavatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.forwardAvatar)
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_forwardavatar() {
  set_has_forwardavatar();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.forwardAvatar)
  return forwardavatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp_ObjNews::release_forwardavatar() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.ObjNews.forwardAvatar)
  clear_has_forwardavatar();
  return forwardavatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_allocated_forwardavatar(::std::string* forwardavatar) {
  if (forwardavatar != NULL) {
    set_has_forwardavatar();
  } else {
    clear_has_forwardavatar();
  }
  forwardavatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forwardavatar);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.ObjNews.forwardAvatar)
}

// optional string forwardNickname = 3;
bool FriendVoiceNewResp_ObjNews::has_forwardnickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_forwardnickname() {
  _has_bits_[0] |= 0x00000004u;
}
void FriendVoiceNewResp_ObjNews::clear_has_forwardnickname() {
  _has_bits_[0] &= ~0x00000004u;
}
void FriendVoiceNewResp_ObjNews::clear_forwardnickname() {
  forwardnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_forwardnickname();
}
const ::std::string& FriendVoiceNewResp_ObjNews::forwardnickname() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.forwardNickname)
  return forwardnickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_forwardnickname(const ::std::string& value) {
  set_has_forwardnickname();
  forwardnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.forwardNickname)
}
void FriendVoiceNewResp_ObjNews::set_forwardnickname(const char* value) {
  set_has_forwardnickname();
  forwardnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.forwardNickname)
}
void FriendVoiceNewResp_ObjNews::set_forwardnickname(const char* value, size_t size) {
  set_has_forwardnickname();
  forwardnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.forwardNickname)
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_forwardnickname() {
  set_has_forwardnickname();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.forwardNickname)
  return forwardnickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp_ObjNews::release_forwardnickname() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.ObjNews.forwardNickname)
  clear_has_forwardnickname();
  return forwardnickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_allocated_forwardnickname(::std::string* forwardnickname) {
  if (forwardnickname != NULL) {
    set_has_forwardnickname();
  } else {
    clear_has_forwardnickname();
  }
  forwardnickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forwardnickname);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.ObjNews.forwardNickname)
}

// optional int64 forwardLevel = 4;
bool FriendVoiceNewResp_ObjNews::has_forwardlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_forwardlevel() {
  _has_bits_[0] |= 0x00000008u;
}
void FriendVoiceNewResp_ObjNews::clear_has_forwardlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
void FriendVoiceNewResp_ObjNews::clear_forwardlevel() {
  forwardlevel_ = GOOGLE_LONGLONG(0);
  clear_has_forwardlevel();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::forwardlevel() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.forwardLevel)
  return forwardlevel_;
}
void FriendVoiceNewResp_ObjNews::set_forwardlevel(::google::protobuf::int64 value) {
  set_has_forwardlevel();
  forwardlevel_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.forwardLevel)
}

// required int64 releaseTime = 5;
bool FriendVoiceNewResp_ObjNews::has_releasetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_releasetime() {
  _has_bits_[0] |= 0x00000010u;
}
void FriendVoiceNewResp_ObjNews::clear_has_releasetime() {
  _has_bits_[0] &= ~0x00000010u;
}
void FriendVoiceNewResp_ObjNews::clear_releasetime() {
  releasetime_ = GOOGLE_LONGLONG(0);
  clear_has_releasetime();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::releasetime() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.releaseTime)
  return releasetime_;
}
void FriendVoiceNewResp_ObjNews::set_releasetime(::google::protobuf::int64 value) {
  set_has_releasetime();
  releasetime_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.releaseTime)
}

// optional string forwardComment = 6;
bool FriendVoiceNewResp_ObjNews::has_forwardcomment() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_forwardcomment() {
  _has_bits_[0] |= 0x00000020u;
}
void FriendVoiceNewResp_ObjNews::clear_has_forwardcomment() {
  _has_bits_[0] &= ~0x00000020u;
}
void FriendVoiceNewResp_ObjNews::clear_forwardcomment() {
  forwardcomment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_forwardcomment();
}
const ::std::string& FriendVoiceNewResp_ObjNews::forwardcomment() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.forwardComment)
  return forwardcomment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_forwardcomment(const ::std::string& value) {
  set_has_forwardcomment();
  forwardcomment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.forwardComment)
}
void FriendVoiceNewResp_ObjNews::set_forwardcomment(const char* value) {
  set_has_forwardcomment();
  forwardcomment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.forwardComment)
}
void FriendVoiceNewResp_ObjNews::set_forwardcomment(const char* value, size_t size) {
  set_has_forwardcomment();
  forwardcomment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.forwardComment)
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_forwardcomment() {
  set_has_forwardcomment();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.forwardComment)
  return forwardcomment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp_ObjNews::release_forwardcomment() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.ObjNews.forwardComment)
  clear_has_forwardcomment();
  return forwardcomment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_allocated_forwardcomment(::std::string* forwardcomment) {
  if (forwardcomment != NULL) {
    set_has_forwardcomment();
  } else {
    clear_has_forwardcomment();
  }
  forwardcomment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forwardcomment);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.ObjNews.forwardComment)
}

// required int64 userId = 7;
bool FriendVoiceNewResp_ObjNews::has_userid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_userid() {
  _has_bits_[0] |= 0x00000040u;
}
void FriendVoiceNewResp_ObjNews::clear_has_userid() {
  _has_bits_[0] &= ~0x00000040u;
}
void FriendVoiceNewResp_ObjNews::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  clear_has_userid();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::userid() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.userId)
  return userid_;
}
void FriendVoiceNewResp_ObjNews::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.userId)
}

// required string nickname = 8;
bool FriendVoiceNewResp_ObjNews::has_nickname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_nickname() {
  _has_bits_[0] |= 0x00000080u;
}
void FriendVoiceNewResp_ObjNews::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000080u;
}
void FriendVoiceNewResp_ObjNews::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& FriendVoiceNewResp_ObjNews::nickname() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.nickname)
}
void FriendVoiceNewResp_ObjNews::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.nickname)
}
void FriendVoiceNewResp_ObjNews::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.nickname)
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp_ObjNews::release_nickname() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.ObjNews.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.ObjNews.nickname)
}

// required string avatar = 9;
bool FriendVoiceNewResp_ObjNews::has_avatar() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_avatar() {
  _has_bits_[0] |= 0x00000100u;
}
void FriendVoiceNewResp_ObjNews::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000100u;
}
void FriendVoiceNewResp_ObjNews::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_avatar();
}
const ::std::string& FriendVoiceNewResp_ObjNews::avatar() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_avatar(const ::std::string& value) {
  set_has_avatar();
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.avatar)
}
void FriendVoiceNewResp_ObjNews::set_avatar(const char* value) {
  set_has_avatar();
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.avatar)
}
void FriendVoiceNewResp_ObjNews::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.avatar)
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_avatar() {
  set_has_avatar();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp_ObjNews::release_avatar() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.ObjNews.avatar)
  clear_has_avatar();
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    set_has_avatar();
  } else {
    clear_has_avatar();
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.ObjNews.avatar)
}

// required int64 level = 10;
bool FriendVoiceNewResp_ObjNews::has_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_level() {
  _has_bits_[0] |= 0x00000200u;
}
void FriendVoiceNewResp_ObjNews::clear_has_level() {
  _has_bits_[0] &= ~0x00000200u;
}
void FriendVoiceNewResp_ObjNews::clear_level() {
  level_ = GOOGLE_LONGLONG(0);
  clear_has_level();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::level() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.level)
  return level_;
}
void FriendVoiceNewResp_ObjNews::set_level(::google::protobuf::int64 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.level)
}

// required int64 voiceId = 11;
bool FriendVoiceNewResp_ObjNews::has_voiceid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_voiceid() {
  _has_bits_[0] |= 0x00000400u;
}
void FriendVoiceNewResp_ObjNews::clear_has_voiceid() {
  _has_bits_[0] &= ~0x00000400u;
}
void FriendVoiceNewResp_ObjNews::clear_voiceid() {
  voiceid_ = GOOGLE_LONGLONG(0);
  clear_has_voiceid();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::voiceid() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.voiceId)
  return voiceid_;
}
void FriendVoiceNewResp_ObjNews::set_voiceid(::google::protobuf::int64 value) {
  set_has_voiceid();
  voiceid_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.voiceId)
}

// required string voiceName = 12;
bool FriendVoiceNewResp_ObjNews::has_voicename() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_voicename() {
  _has_bits_[0] |= 0x00000800u;
}
void FriendVoiceNewResp_ObjNews::clear_has_voicename() {
  _has_bits_[0] &= ~0x00000800u;
}
void FriendVoiceNewResp_ObjNews::clear_voicename() {
  voicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voicename();
}
const ::std::string& FriendVoiceNewResp_ObjNews::voicename() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.voiceName)
  return voicename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_voicename(const ::std::string& value) {
  set_has_voicename();
  voicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.voiceName)
}
void FriendVoiceNewResp_ObjNews::set_voicename(const char* value) {
  set_has_voicename();
  voicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.voiceName)
}
void FriendVoiceNewResp_ObjNews::set_voicename(const char* value, size_t size) {
  set_has_voicename();
  voicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.voiceName)
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_voicename() {
  set_has_voicename();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.voiceName)
  return voicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp_ObjNews::release_voicename() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.ObjNews.voiceName)
  clear_has_voicename();
  return voicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_allocated_voicename(::std::string* voicename) {
  if (voicename != NULL) {
    set_has_voicename();
  } else {
    clear_has_voicename();
  }
  voicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voicename);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.ObjNews.voiceName)
}

// required int64 voiceLength = 13;
bool FriendVoiceNewResp_ObjNews::has_voicelength() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_voicelength() {
  _has_bits_[0] |= 0x00001000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_voicelength() {
  _has_bits_[0] &= ~0x00001000u;
}
void FriendVoiceNewResp_ObjNews::clear_voicelength() {
  voicelength_ = GOOGLE_LONGLONG(0);
  clear_has_voicelength();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::voicelength() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.voiceLength)
  return voicelength_;
}
void FriendVoiceNewResp_ObjNews::set_voicelength(::google::protobuf::int64 value) {
  set_has_voicelength();
  voicelength_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.voiceLength)
}

// repeated string voicePic = 14;
int FriendVoiceNewResp_ObjNews::voicepic_size() const {
  return voicepic_.size();
}
void FriendVoiceNewResp_ObjNews::clear_voicepic() {
  voicepic_.Clear();
}
const ::std::string& FriendVoiceNewResp_ObjNews::voicepic(int index) const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.voicePic)
  return voicepic_.Get(index);
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_voicepic(int index) {
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.voicePic)
  return voicepic_.Mutable(index);
}
void FriendVoiceNewResp_ObjNews::set_voicepic(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.voicePic)
  voicepic_.Mutable(index)->assign(value);
}
void FriendVoiceNewResp_ObjNews::set_voicepic(int index, const char* value) {
  voicepic_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.voicePic)
}
void FriendVoiceNewResp_ObjNews::set_voicepic(int index, const char* value, size_t size) {
  voicepic_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.voicePic)
}
::std::string* FriendVoiceNewResp_ObjNews::add_voicepic() {
  // @@protoc_insertion_point(field_add_mutable:jjd.FriendVoiceNewResp.ObjNews.voicePic)
  return voicepic_.Add();
}
void FriendVoiceNewResp_ObjNews::add_voicepic(const ::std::string& value) {
  voicepic_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:jjd.FriendVoiceNewResp.ObjNews.voicePic)
}
void FriendVoiceNewResp_ObjNews::add_voicepic(const char* value) {
  voicepic_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:jjd.FriendVoiceNewResp.ObjNews.voicePic)
}
void FriendVoiceNewResp_ObjNews::add_voicepic(const char* value, size_t size) {
  voicepic_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:jjd.FriendVoiceNewResp.ObjNews.voicePic)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
FriendVoiceNewResp_ObjNews::voicepic() const {
  // @@protoc_insertion_point(field_list:jjd.FriendVoiceNewResp.ObjNews.voicePic)
  return voicepic_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
FriendVoiceNewResp_ObjNews::mutable_voicepic() {
  // @@protoc_insertion_point(field_mutable_list:jjd.FriendVoiceNewResp.ObjNews.voicePic)
  return &voicepic_;
}

// required int64 commentCount = 15;
bool FriendVoiceNewResp_ObjNews::has_commentcount() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_commentcount() {
  _has_bits_[0] |= 0x00004000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_commentcount() {
  _has_bits_[0] &= ~0x00004000u;
}
void FriendVoiceNewResp_ObjNews::clear_commentcount() {
  commentcount_ = GOOGLE_LONGLONG(0);
  clear_has_commentcount();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::commentcount() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.commentCount)
  return commentcount_;
}
void FriendVoiceNewResp_ObjNews::set_commentcount(::google::protobuf::int64 value) {
  set_has_commentcount();
  commentcount_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.commentCount)
}

// required int64 forwardCount = 16;
bool FriendVoiceNewResp_ObjNews::has_forwardcount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_forwardcount() {
  _has_bits_[0] |= 0x00008000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_forwardcount() {
  _has_bits_[0] &= ~0x00008000u;
}
void FriendVoiceNewResp_ObjNews::clear_forwardcount() {
  forwardcount_ = GOOGLE_LONGLONG(0);
  clear_has_forwardcount();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::forwardcount() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.forwardCount)
  return forwardcount_;
}
void FriendVoiceNewResp_ObjNews::set_forwardcount(::google::protobuf::int64 value) {
  set_has_forwardcount();
  forwardcount_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.forwardCount)
}

// required int64 likeCount = 17;
bool FriendVoiceNewResp_ObjNews::has_likecount() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_likecount() {
  _has_bits_[0] |= 0x00010000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_likecount() {
  _has_bits_[0] &= ~0x00010000u;
}
void FriendVoiceNewResp_ObjNews::clear_likecount() {
  likecount_ = GOOGLE_LONGLONG(0);
  clear_has_likecount();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::likecount() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.likeCount)
  return likecount_;
}
void FriendVoiceNewResp_ObjNews::set_likecount(::google::protobuf::int64 value) {
  set_has_likecount();
  likecount_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.likeCount)
}

// required int64 playCount = 18;
bool FriendVoiceNewResp_ObjNews::has_playcount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_playcount() {
  _has_bits_[0] |= 0x00020000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_playcount() {
  _has_bits_[0] &= ~0x00020000u;
}
void FriendVoiceNewResp_ObjNews::clear_playcount() {
  playcount_ = GOOGLE_LONGLONG(0);
  clear_has_playcount();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::playcount() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.playCount)
  return playcount_;
}
void FriendVoiceNewResp_ObjNews::set_playcount(::google::protobuf::int64 value) {
  set_has_playcount();
  playcount_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.playCount)
}

// required string voiceDesc = 19;
bool FriendVoiceNewResp_ObjNews::has_voicedesc() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_voicedesc() {
  _has_bits_[0] |= 0x00040000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_voicedesc() {
  _has_bits_[0] &= ~0x00040000u;
}
void FriendVoiceNewResp_ObjNews::clear_voicedesc() {
  voicedesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voicedesc();
}
const ::std::string& FriendVoiceNewResp_ObjNews::voicedesc() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.voiceDesc)
  return voicedesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_voicedesc(const ::std::string& value) {
  set_has_voicedesc();
  voicedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.voiceDesc)
}
void FriendVoiceNewResp_ObjNews::set_voicedesc(const char* value) {
  set_has_voicedesc();
  voicedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.voiceDesc)
}
void FriendVoiceNewResp_ObjNews::set_voicedesc(const char* value, size_t size) {
  set_has_voicedesc();
  voicedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.voiceDesc)
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_voicedesc() {
  set_has_voicedesc();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.voiceDesc)
  return voicedesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp_ObjNews::release_voicedesc() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.ObjNews.voiceDesc)
  clear_has_voicedesc();
  return voicedesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_allocated_voicedesc(::std::string* voicedesc) {
  if (voicedesc != NULL) {
    set_has_voicedesc();
  } else {
    clear_has_voicedesc();
  }
  voicedesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voicedesc);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.ObjNews.voiceDesc)
}

// required int64 voiceSize = 20;
bool FriendVoiceNewResp_ObjNews::has_voicesize() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_voicesize() {
  _has_bits_[0] |= 0x00080000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_voicesize() {
  _has_bits_[0] &= ~0x00080000u;
}
void FriendVoiceNewResp_ObjNews::clear_voicesize() {
  voicesize_ = GOOGLE_LONGLONG(0);
  clear_has_voicesize();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::voicesize() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.voiceSize)
  return voicesize_;
}
void FriendVoiceNewResp_ObjNews::set_voicesize(::google::protobuf::int64 value) {
  set_has_voicesize();
  voicesize_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.voiceSize)
}

// required bool likeState = 21 [default = false];
bool FriendVoiceNewResp_ObjNews::has_likestate() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_likestate() {
  _has_bits_[0] |= 0x00100000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_likestate() {
  _has_bits_[0] &= ~0x00100000u;
}
void FriendVoiceNewResp_ObjNews::clear_likestate() {
  likestate_ = false;
  clear_has_likestate();
}
bool FriendVoiceNewResp_ObjNews::likestate() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.likeState)
  return likestate_;
}
void FriendVoiceNewResp_ObjNews::set_likestate(bool value) {
  set_has_likestate();
  likestate_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.likeState)
}

// repeated string largeVoicePic = 22;
int FriendVoiceNewResp_ObjNews::largevoicepic_size() const {
  return largevoicepic_.size();
}
void FriendVoiceNewResp_ObjNews::clear_largevoicepic() {
  largevoicepic_.Clear();
}
const ::std::string& FriendVoiceNewResp_ObjNews::largevoicepic(int index) const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
  return largevoicepic_.Get(index);
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_largevoicepic(int index) {
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
  return largevoicepic_.Mutable(index);
}
void FriendVoiceNewResp_ObjNews::set_largevoicepic(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
  largevoicepic_.Mutable(index)->assign(value);
}
void FriendVoiceNewResp_ObjNews::set_largevoicepic(int index, const char* value) {
  largevoicepic_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
}
void FriendVoiceNewResp_ObjNews::set_largevoicepic(int index, const char* value, size_t size) {
  largevoicepic_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
}
::std::string* FriendVoiceNewResp_ObjNews::add_largevoicepic() {
  // @@protoc_insertion_point(field_add_mutable:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
  return largevoicepic_.Add();
}
void FriendVoiceNewResp_ObjNews::add_largevoicepic(const ::std::string& value) {
  largevoicepic_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
}
void FriendVoiceNewResp_ObjNews::add_largevoicepic(const char* value) {
  largevoicepic_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
}
void FriendVoiceNewResp_ObjNews::add_largevoicepic(const char* value, size_t size) {
  largevoicepic_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
FriendVoiceNewResp_ObjNews::largevoicepic() const {
  // @@protoc_insertion_point(field_list:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
  return largevoicepic_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
FriendVoiceNewResp_ObjNews::mutable_largevoicepic() {
  // @@protoc_insertion_point(field_mutable_list:jjd.FriendVoiceNewResp.ObjNews.largeVoicePic)
  return &largevoicepic_;
}

// required string voicePath = 23;
bool FriendVoiceNewResp_ObjNews::has_voicepath() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_voicepath() {
  _has_bits_[0] |= 0x00400000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_voicepath() {
  _has_bits_[0] &= ~0x00400000u;
}
void FriendVoiceNewResp_ObjNews::clear_voicepath() {
  voicepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voicepath();
}
const ::std::string& FriendVoiceNewResp_ObjNews::voicepath() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.voicePath)
  return voicepath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_voicepath(const ::std::string& value) {
  set_has_voicepath();
  voicepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.voicePath)
}
void FriendVoiceNewResp_ObjNews::set_voicepath(const char* value) {
  set_has_voicepath();
  voicepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.ObjNews.voicePath)
}
void FriendVoiceNewResp_ObjNews::set_voicepath(const char* value, size_t size) {
  set_has_voicepath();
  voicepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.ObjNews.voicePath)
}
::std::string* FriendVoiceNewResp_ObjNews::mutable_voicepath() {
  set_has_voicepath();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.ObjNews.voicePath)
  return voicepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp_ObjNews::release_voicepath() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.ObjNews.voicePath)
  clear_has_voicepath();
  return voicepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp_ObjNews::set_allocated_voicepath(::std::string* voicepath) {
  if (voicepath != NULL) {
    set_has_voicepath();
  } else {
    clear_has_voicepath();
  }
  voicepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voicepath);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.ObjNews.voicePath)
}

// optional int64 voiceType = 24;
bool FriendVoiceNewResp_ObjNews::has_voicetype() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_voicetype() {
  _has_bits_[0] |= 0x00800000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_voicetype() {
  _has_bits_[0] &= ~0x00800000u;
}
void FriendVoiceNewResp_ObjNews::clear_voicetype() {
  voicetype_ = GOOGLE_LONGLONG(0);
  clear_has_voicetype();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::voicetype() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.voiceType)
  return voicetype_;
}
void FriendVoiceNewResp_ObjNews::set_voicetype(::google::protobuf::int64 value) {
  set_has_voicetype();
  voicetype_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.voiceType)
}

// optional int64 liveStatus = 25;
bool FriendVoiceNewResp_ObjNews::has_livestatus() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_livestatus() {
  _has_bits_[0] |= 0x01000000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_livestatus() {
  _has_bits_[0] &= ~0x01000000u;
}
void FriendVoiceNewResp_ObjNews::clear_livestatus() {
  livestatus_ = GOOGLE_LONGLONG(0);
  clear_has_livestatus();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::livestatus() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.liveStatus)
  return livestatus_;
}
void FriendVoiceNewResp_ObjNews::set_livestatus(::google::protobuf::int64 value) {
  set_has_livestatus();
  livestatus_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.liveStatus)
}

// optional int64 liveTime = 26;
bool FriendVoiceNewResp_ObjNews::has_livetime() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_livetime() {
  _has_bits_[0] |= 0x02000000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_livetime() {
  _has_bits_[0] &= ~0x02000000u;
}
void FriendVoiceNewResp_ObjNews::clear_livetime() {
  livetime_ = GOOGLE_LONGLONG(0);
  clear_has_livetime();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::livetime() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.liveTime)
  return livetime_;
}
void FriendVoiceNewResp_ObjNews::set_livetime(::google::protobuf::int64 value) {
  set_has_livetime();
  livetime_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.liveTime)
}

// optional int64 nowTime = 27;
bool FriendVoiceNewResp_ObjNews::has_nowtime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void FriendVoiceNewResp_ObjNews::set_has_nowtime() {
  _has_bits_[0] |= 0x04000000u;
}
void FriendVoiceNewResp_ObjNews::clear_has_nowtime() {
  _has_bits_[0] &= ~0x04000000u;
}
void FriendVoiceNewResp_ObjNews::clear_nowtime() {
  nowtime_ = GOOGLE_LONGLONG(0);
  clear_has_nowtime();
}
::google::protobuf::int64 FriendVoiceNewResp_ObjNews::nowtime() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.ObjNews.nowTime)
  return nowtime_;
}
void FriendVoiceNewResp_ObjNews::set_nowtime(::google::protobuf::int64 value) {
  set_has_nowtime();
  nowtime_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.ObjNews.nowTime)
}

inline const FriendVoiceNewResp_ObjNews* FriendVoiceNewResp_ObjNews::internal_default_instance() {
  return &FriendVoiceNewResp_ObjNews_default_instance_.get();
}
// -------------------------------------------------------------------

// FriendVoiceNewResp

// required int64 state = 1;
bool FriendVoiceNewResp::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FriendVoiceNewResp::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
void FriendVoiceNewResp::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void FriendVoiceNewResp::clear_state() {
  state_ = GOOGLE_LONGLONG(0);
  clear_has_state();
}
::google::protobuf::int64 FriendVoiceNewResp::state() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.state)
  return state_;
}
void FriendVoiceNewResp::set_state(::google::protobuf::int64 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.state)
}

// required string msg = 2;
bool FriendVoiceNewResp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FriendVoiceNewResp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void FriendVoiceNewResp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void FriendVoiceNewResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& FriendVoiceNewResp::msg() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jjd.FriendVoiceNewResp.msg)
}
void FriendVoiceNewResp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jjd.FriendVoiceNewResp.msg)
}
void FriendVoiceNewResp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jjd.FriendVoiceNewResp.msg)
}
::std::string* FriendVoiceNewResp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendVoiceNewResp::release_msg() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendVoiceNewResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.msg)
}

// optional .jjd.FriendVoiceNewResp.Result result = 3;
bool FriendVoiceNewResp::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FriendVoiceNewResp::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void FriendVoiceNewResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void FriendVoiceNewResp::clear_result() {
  if (result_ != NULL) result_->::jjd::FriendVoiceNewResp_Result::Clear();
  clear_has_result();
}
const ::jjd::FriendVoiceNewResp_Result& FriendVoiceNewResp::result() const {
  // @@protoc_insertion_point(field_get:jjd.FriendVoiceNewResp.result)
  return result_ != NULL ? *result_
                         : *::jjd::FriendVoiceNewResp_Result::internal_default_instance();
}
::jjd::FriendVoiceNewResp_Result* FriendVoiceNewResp::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::jjd::FriendVoiceNewResp_Result;
  }
  // @@protoc_insertion_point(field_mutable:jjd.FriendVoiceNewResp.result)
  return result_;
}
::jjd::FriendVoiceNewResp_Result* FriendVoiceNewResp::release_result() {
  // @@protoc_insertion_point(field_release:jjd.FriendVoiceNewResp.result)
  clear_has_result();
  ::jjd::FriendVoiceNewResp_Result* temp = result_;
  result_ = NULL;
  return temp;
}
void FriendVoiceNewResp::set_allocated_result(::jjd::FriendVoiceNewResp_Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:jjd.FriendVoiceNewResp.result)
}

inline const FriendVoiceNewResp* FriendVoiceNewResp::internal_default_instance() {
  return &FriendVoiceNewResp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace jjd

// @@protoc_insertion_point(global_scope)
